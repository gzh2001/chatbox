name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      publish:
        description: 'Publish release'
        required: false
        default: false
        type: boolean

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.node-version'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Build for Windows
      run: npm run package
      env:
        NODE_ENV: production

    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: |
          dist/*.exe
          dist/*.msi
        retention-days: 30

  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.node-version'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Build for macOS
      run: npm run package
      env:
        NODE_ENV: production

    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: |
          dist/*.dmg
          dist/*.zip
        retention-days: 30

  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.node-version'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Build for Linux
      run: npm run package
      env:
        NODE_ENV: production

    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: |
          dist/*.AppImage
          dist/*.deb
          dist/*.rpm
        retention-days: 30

  build-all-platforms:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.node-version'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Build for all platforms
      run: npm run package:all
      env:
        NODE_ENV: production

    - name: Upload all platform artifacts
      uses: actions/upload-artifact@v4
      with:
        name: all-platforms-build
        path: |
          dist/
        retention-days: 30

  create-release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-macos, build-linux]
    if: startsWith(github.ref, 'refs/tags/') || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish == 'true')

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: windows-build
        path: dist/

    - name: Download macOS artifacts
      uses: actions/download-artifact@v4
      with:
        name: macos-build
        path: dist/

    - name: Download Linux artifacts
      uses: actions/download-artifact@v4
      with:
        name: linux-build
        path: dist/

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        draft: false
        prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
