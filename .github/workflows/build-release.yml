name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      publish:
        description: 'Publish release'
        required: false
        default: false
        type: boolean

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.node-version'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Debug environment (Windows)
      if: runner.os == 'Windows'
      run: |
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "CSC_IDENTITY_AUTO_DISCOVERY: ${{ env.CSC_IDENTITY_AUTO_DISCOVERY }}"
        echo "Checking custom_win_sign.js..."
        if (Test-Path "custom_win_sign.js") { echo "custom_win_sign.js exists" } else { echo "custom_win_sign.js not found" }
      shell: powershell

    - name: Build for Windows
      run: npm run package
      env:
        NODE_ENV: production
        CSC_IDENTITY_AUTO_DISCOVERY: false

    - name: List build output (Windows)
      run: |
        echo "Checking build output..."
        if (Test-Path "dist") { 
          Get-ChildItem -Path "dist" -Recurse | Select-Object Name, Length, LastWriteTime 
        } else { 
          echo "dist directory not found" 
        }
        if (Test-Path "release") { 
          Get-ChildItem -Path "release" -Recurse | Select-Object Name, Length, LastWriteTime 
        } else { 
          echo "release directory not found" 
        }
      shell: powershell

    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: |
          release/build/*.exe
          release/build/*.msi
        retention-days: 30
        if-no-files-found: warn

  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.node-version'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Install additional macOS build dependencies
      run: |
        # Install dmg-license if it's missing (this can happen in some CI environments)
        if ! npm list dmg-license > /dev/null 2>&1; then
          echo "Installing dmg-license..."
          npm install dmg-license --save-optional || echo "dmg-license installation failed, continuing..."
        fi
      continue-on-error: true

    - name: Debug environment (macOS)
      run: |
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "CSC_IDENTITY_AUTO_DISCOVERY: $CSC_IDENTITY_AUTO_DISCOVERY"
        echo "Platform: $(uname -s)"
        echo "Architecture: $(uname -m)"
        ls -la | grep -E "(custom_|sign|\.p12|\.pem)" || echo "No signing files found"
        echo "Checking electron-builder dependencies..."
        npm list electron-builder dmg-builder 2>/dev/null || echo "Some packages not found (this may be normal)"

    - name: Build for macOS
      run: npm run package
      env:
        NODE_ENV: production
        CSC_IDENTITY_AUTO_DISCOVERY: false

    - name: List build output (macOS)
      run: |
        echo "Checking build output..."
        if [ -d "dist" ]; then
          ls -la dist/
        else
          echo "dist directory not found"
        fi
        if [ -d "release" ]; then
          find release/ -type f -name "*.dmg" -o -name "*.zip" | head -10
        else
          echo "release directory not found"
        fi

    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: |
          release/build/*.dmg
          release/build/*.zip
        retention-days: 30
        if-no-files-found: warn

  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: '.node-version'
        cache: 'npm'

    - name: Install dependencies
      run: npm install

    - name: Build for Linux
      run: npm run package
      env:
        NODE_ENV: production
        CSC_IDENTITY_AUTO_DISCOVERY: false

    - name: List build output (Linux)
      run: |
        echo "Checking build output..."
        if [ -d "dist" ]; then
          ls -la dist/
        else
          echo "dist directory not found"
        fi
        if [ -d "release" ]; then
          find release/ -type f -name "*.AppImage" -o -name "*.deb" -o -name "*.rpm" | head -10
        else
          echo "release directory not found"
        fi

    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: |
          release/build/*.AppImage
          release/build/*.deb
          release/build/*.rpm
        retention-days: 30
        if-no-files-found: warn

  # Cross-platform build removed due to platform-specific dependency issues
  # Individual platform builds above provide better compatibility and reliability

  create-release:
    runs-on: ubuntu-latest
    needs: [build-windows, build-macos, build-linux]
    if: (startsWith(github.ref, 'refs/tags/') || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish == 'true')) && (success() || failure())

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Create dist directory
      run: mkdir -p dist

    - name: Download Windows artifacts
      uses: actions/download-artifact@v4
      with:
        name: windows-build
        path: dist/
      continue-on-error: true

    - name: Download macOS artifacts
      uses: actions/download-artifact@v4
      with:
        name: macos-build
        path: dist/
      continue-on-error: true

    - name: Download Linux artifacts
      uses: actions/download-artifact@v4
      with:
        name: linux-build
        path: dist/
      continue-on-error: true

    - name: List downloaded artifacts
      run: |
        echo "Downloaded artifacts:"
        ls -la dist/ || echo "No artifacts found"
        find dist/ -type f -name "*" | head -20 || echo "No files in dist/"

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        draft: false
        prerelease: ${{ contains(github.ref, 'beta') || contains(github.ref, 'alpha') }}
        generate_release_notes: true
        fail_on_unmatched_files: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
