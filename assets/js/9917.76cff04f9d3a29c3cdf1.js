"use strict";(self.webpackChunkxyz_chatboxapp_ce=self.webpackChunkxyz_chatboxapp_ce||[]).push([[9917],{79094:(e,t,n)=>{n.d(t,{h:()=>s,u:()=>i});var a=n(60506),r=n(98200);const i=[{id:"fetch",name:"Fetch",description:r.A.t("This server enables LLMs to retrieve and process content from web pages, converting HTML to markdown for easier consumption."),url:"https://mcp.chatboxai.app/fetch"},{id:"sequentialthinking",name:"Sequential Thinking",description:r.A.t("An MCP server implementation that provides a tool for dynamic and reflective problem-solving through a structured thinking process."),url:"https://mcp.chatboxai.app/sequentialthinking"},{id:"edgeone-pages",name:"EdgeOne Pages",description:r.A.t("Deploy HTML content to EdgeOne Pages and obtaining an accessible public URL."),url:"https://mcp.chatboxai.app/edgeone-pages"},{id:"arxiv",name:"arXiv",description:r.A.t("MCP server for accessing arXiv papers"),url:"https://mcp.chatboxai.app/arxiv"},{id:"context7",name:"Context7",description:r.A.t("Retrieves up-to-date documentation and code examples for any library."),url:"https://mcp.chatboxai.app/context7"}];function s(e,t){const n=i.find((t=>t.id===e));if(!n)return null;const r=t||(0,a.VW)();return{id:e,name:n.name,enabled:!0,transport:{type:"http",url:n.url,headers:r?{"x-chatbox-license":r}:void 0}}}},9917:(e,t,n)=>{n.r(t);var a=n(79094),r=n(40374),i=n(36920),s=n(41735);i.A.getSettings().then((({mcp:e,licenseKey:t})=>{const n=[...(e.enabledBuiltinServers||[]).map((e=>(0,a.h)(e,t))).filter((e=>!!e)),...e.servers||[]];console.info(`mcp bootstrap ${n.length} servers, with license key: ${!!t}`),r.H.bootstrap(n),"development"===s.X$&&setInterval((()=>{console.debug(JSON.stringify(Array.from(r.H.servers.values()).map((({config:e,instance:t})=>({id:e.id,name:e.name,status:t.status}))),null,2))}),1e4)})).catch((e=>{console.error("mcp bootstrap error",e)}))}}]);